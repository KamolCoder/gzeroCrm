# Generated by Django 4.2.1 on 2024-04-18 14:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Abonement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Абонемент')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('days', models.PositiveSmallIntegerField(verbose_name='days')),
            ],
            options={
                'verbose_name': 'Абонемент',
                'verbose_name_plural': 'Абонементы',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('limit', models.PositiveSmallIntegerField(default=1, verbose_name='Максимальная длительность брони')),
                ('discount', models.BooleanField(default=False, verbose_name='Free часы для подписчиков')),
            ],
            options={
                'verbose_name': 'Категория комнаты',
                'verbose_name_plural': '3 Категории комнат',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_lang', models.CharField(blank=True, choices=[('en', 'English'), ('ru', 'Russian'), ('uz', 'Uzbek')], default='ru', max_length=10, null=True)),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('surname', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('telegram_id', models.TextField(max_length=100, unique=True, verbose_name='ТГ-ИД клиента')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Фото клиента')),
                ('username', models.CharField(blank=True, max_length=50, null=True, verbose_name='tg-username')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Контакты')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментария')),
                ('docs', models.FileField(blank=True, null=True, upload_to='docs/users', verbose_name='Документы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('discount', models.SmallIntegerField(default=0, verbose_name='Скидка %')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('loyalty', models.PositiveSmallIntegerField(default=1, verbose_name='Стаж клиента/день')),
                ('activity', models.PositiveSmallIntegerField(default=4, verbose_name='Индекс активности')),
                ('added_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('token', models.CharField(max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/companies/', verbose_name='Фото компании')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': '1 Компании',
            },
        ),
        migrations.CreateModel(
            name='Filial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('token', models.CharField(max_length=20)),
                ('images', models.ImageField(blank=True, null=True, upload_to='images/branches/', verbose_name='Фото филиала')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес центра')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': '2 Филиалы',
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('persons', models.PositiveIntegerField()),
                ('is_working', models.BooleanField(blank=True, default=False, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.category')),
                ('filial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.filial')),
            ],
            options={
                'verbose_name': 'Помещения в филиалах',
                'verbose_name_plural': '4 Помещении в филиалах',
            },
        ),
        migrations.CreateModel(
            name='Pricelists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.PositiveSmallIntegerField(verbose_name='Час')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricelists', to='crm.rooms')),
            ],
            options={
                'verbose_name': 'Прайслист',
                'verbose_name_plural': 'Прайслисты',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.PositiveSmallIntegerField(verbose_name='Длительность')),
                ('payment', models.BooleanField(choices=[(False, 'Наличные'), (True, 'Карта')], default=False, verbose_name='Тип оплаты')),
                ('payment_status', models.BooleanField(default=False, verbose_name='Оплачен')),
                ('summa', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Сумма')),
                ('order_start', models.DateTimeField(verbose_name='Бронировать от :')),
                ('order_end', models.DateTimeField(verbose_name='Бронировать до :')),
                ('pay_accept_user', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментария')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('Waiting', 'Ожидание'), ('Cancelled', 'Отменено'), ('Active', 'В процессе'), ('Closed', 'Закрыто')], default='Waiting', max_length=30)),
                ('discount', models.PositiveSmallIntegerField(default=0)),
                ('added_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.client', to_field='telegram_id', verbose_name='Клиент')),
                ('filial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.filial')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.rooms')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='OfficeRent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rent_start', models.DateField(verbose_name='Начало бронирование')),
                ('rent_end', models.DateField(verbose_name='Конец бронирование')),
                ('is_active', models.BooleanField(default=True)),
                ('booked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.client', verbose_name='Кто бронировал')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='crm.rooms')),
            ],
            options={
                'verbose_name': 'Аренда офиса',
                'verbose_name_plural': 'Аренда офисов',
            },
        ),
        migrations.CreateModel(
            name='OfficePersons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.officerent')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.client')),
            ],
            options={
                'verbose_name': 'Офисник',
                'verbose_name_plural': 'Офисники',
            },
        ),
        migrations.CreateModel(
            name='NotifyDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_send', models.DateField(verbose_name='Дата отправки')),
                ('sent_time', models.DateTimeField(auto_now_add=True, verbose_name='Времья отправки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Дата отправки уведом.',
                'verbose_name_plural': 'Дата отправки уведом.',
            },
        ),
        migrations.CreateModel(
            name='ManagersBonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus', models.PositiveIntegerField(default=0, verbose_name='Сумма бонуса')),
                ('added_at', models.DateTimeField(verbose_name='Дата зачисления')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='crm.order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Бонус',
                'verbose_name_plural': 'Бонусы',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/branch', verbose_name='Image')),
                ('filial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='crm.filial', verbose_name='Filial')),
            ],
            options={
                'verbose_name': 'Filials image',
                'verbose_name_plural': 'Filials images',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event_start_date', models.DateTimeField(verbose_name='Дата ивента')),
                ('title', models.TextField(max_length=255, verbose_name='Заголовка')),
                ('event_description', models.TextField(verbose_name='Описания')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Постер')),
                ('event_locate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='crm.filial', verbose_name='Адрес ивента')),
            ],
            options={
                'verbose_name': 'Мероприятия',
                'verbose_name_plural': 'Мероприятии',
            },
        ),
        migrations.CreateModel(
            name='AbonementBuyList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_start', models.DateField(blank=True, verbose_name='Начало подписки')),
                ('subscription_end', models.DateField(blank=True, verbose_name='Конец подписки')),
                ('free_time', models.SmallIntegerField(default=15, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('abonement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.abonement', verbose_name='Абонемент')),
                ('added_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.client', to_field='telegram_id', verbose_name='ID клиента')),
            ],
            options={
                'verbose_name': 'Данные покупки абонемента',
                'verbose_name_plural': 'Журнал покупок абонементов',
            },
        ),
    ]
